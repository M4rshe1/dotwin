global:
  enable_devtools: true

window/bar:
  providers: [ "self" ]
  width: "{{ self.args.MONITOR_WIDTH }}"
  height: "60" #This one is a bit funky, if you are using scaling, adjust accordingly
  position_x: "{{ self.args.MONITOR_X }}"
  position_y: "{{ self.args.MONITOR_Y }}"
  z_order: "always_on_bottom"
  show_in_taskbar: true
  resizable: false
  global_styles: |
    @import "https://www.nerdfonts.com/assets/css/webfont.css";
    @import "https://cdn.jsdelivr.net/npm/@tabler/icons-webfont@latest/dist/tabler-icons.min.css";

    :root {
      --rp-base: #191724;
      --rp-base-alpha-bg: #191724dd;
      --rp-surface: #1f1d2e;
      --rp-overlay: #26233a;
      --rp-muted: #6e6a86;
      --rp-subtle: #908caa;
      --rp-text: #e0def4;
      --rp-love: #eb6f92;
      --rp-gold: #f6c177;
      --rp-rose: #ebbcba;
      --rp-pine: #31748f;
      --rp-foam: #9ccfd8;
      --rp-iris: #c4a7e7;
      --rp-highlight-low: #21202e;
      --rp-highlight-med: #403d52;
      --rp-highlight-high: #524f67;

      --rp-moon-base: #232136;
      --rp-moon-base-alpha-bg: #232136dd;
      --rp-moon-surface: #2a273f;
      --rp-moon-overlay: #393552;
      --rp-moon-muted: #6e6a86;
      --rp-moon-subtle: #908caa;
      --rp-moon-text: #e0def4;
      --rp-moon-love: #eb6f92;
      --rp-moon-gold: #f6c177;
      --rp-moon-rose: #ea9a97;
      --rp-moon-pine: #3e8fb0;
      --rp-moon-foam: #9ccfd8;
      --rp-moon-iris: #c4a7e7;
      --rp-moon-highlight-low: #2a283e;
      --rp-moon-highlight-med: #44415a;
      --rp-moon-highlight-high: #56526e;

      --rp-dawn-base: #faf4ed;
      --rp-dawn-base-alpha-bg: #faf4eddd
      --rp-dawn-surface: #fffaf3;
      --rp-dawn-overlay: #f2e9e1;
      --rp-dawn-muted: #9893a5;
      --rp-dawn-subtle: #797593;
      --rp-dawn-text: #575279;
      --rp-dawn-love: #b4637a;
      --rp-dawn-gold: #ea9d34;
      --rp-dawn-rose: #d7827e;
      --rp-dawn-pine: #286983;
      --rp-dawn-foam: #56949f;
      --rp-dawn-iris: #907aa9;
      --rp-dawn-highlight-low: #f4ede8;
      --rp-dawn-highlight-med: #dfdad9;
      --rp-dawn-highlight-high: #cecacd;

      --text: var(--rp-text);
      --bg: var(--rp-base-alpha-bg);
      --border: var(--rp-base);
      --icon: var(--rp-love);
      --memory: var(--rp-gold);
      --cpu: var(--rp-rose);
      --cpu-high-usage: var(--rp-love);
      --battery-good: var(--rp-foam);
      --battery-mid: var(--rp-gold);
      --battery-low: var(--rp-love);
      --ws-1: var(--rp-love);
      --ws-2: var(--rp-gold);
      --ws-3: var(--rp-rose);
      --ws-4: var(--rp-pine);
      --ws-5: var(--rp-foam);
      --ws-6: var(--rp-iris);
      --weather: var(--rp-foam);
    }

    @keyframes flash {
        from { opacity: 1.0; }
        50% { opacity: 0.5; }
        to { opacity: 1.0; }
    }

  styles: |
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    align-items: center;
    height: 40px;
    margin: 5px 10px;
    color: var(--text);
    font-family: "SF Mono", ui-monospace, monospace;
    font-size: 16px;
    font-weight: 600;

  group/left:
    styles: |
      display: flex;
      align-items: center;
      justify-content: space-between;
      background: var(--bg);
      border: 1px solid var(--border);
      border-radius: 9999px;
      height: 40px; 
      width: fit-content;

      .template {
        margin: 4px;
        display: flex;
        align-items: center;

        div {
          display: flex;
          align-items: center;
        }
      }

      #memory, #cpu, #battery {
        background: color-mix(in srgb, currentColor 10%, transparent);
        border-radius: 9999px;
        padding: 6px;
        i {
          font-size: 20px;
          margin-right: 7px;
        }
      }

    template/rose-pine:
      providers: [ 'glazewm' ]
      styles: |
        i {
          color: var(--icon);
          background: color-mix(in srgb, currentColor 10%, transparent);
          padding: 6px;
          border-radius: 9999px
        }
        
        .vertical {
          rotate: 90deg;
        }
      template: |
        <i class="nf nf-md-flower_tulip {{ glazewm.tilingDirection === 'vertical' ? '' : 'vertical'}}"></i>

    template/memory:
      providers: [ "memory" ]
      styles: |
        color: var(--memory);
        position: relative;
        .memory-bar {
          width: 50px;
          height: 8px;
          background: color-mix(in srgb, var(--memory) 20%, transparent);
          border-radius: 4px;
          margin-left: 2px;
          position: relative;
          margin-right: 6px;
          transition: all 0.3s ease;
        }
        
        .memory-bar::after {
          content: '';
          position: absolute;
          left: 0;
          top: 0;
          height: 100%;
          background: var(--memory);
          border-radius: 2px;
          width: {{ (memory.usedMemory / memory.totalMemory * 100) }}%;
          transition: all 0.3s ease;
        }
        
        .memory-text {
          opacity: 0;
          pointer-events: none;
          position: absolute;
          transform: translateY(-24px);
          transition: opacity 0.3s ease;
          left: 32px;
        }
        
        &:hover .memory-bar {
          transform: translateY(24px);
          opacity: 0;
        }
        
        &:hover .memory-text {
          opacity: 1;
          transform: translateY(0px);
        }
        
        overflow: hidden;
      template: |
        <i class="ti ti-database"></i>
        <div class="memory-bar"></div>
        <span class="memory-text">{{ (memory.usedMemory / 1000000000).toFixed(0) }}GB</span>

    template/cpu:
      providers: [ "cpu" ]
      styles: |
        color: var(--cpu);
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
        
        .high-usage {
          color: var(--cpu-high-usage);
          animation: flash 0.5s infinite;
        }
        
        .cpu-bar {
          width: 50px;
          height: 8px;
          background: color-mix(in srgb, var(--cpu) 20%, transparent);
          border-radius: 4px;
          margin-left: 2px;
          margin-right: 6px;
          position: relative;
          transition: all 0.3s ease;
        }
        
        .cpu-bar::after {
          content: '';
          position: absolute;
          left: 0;
          top: 0;
          height: 100%;
          background: var(--cpu);
          border-radius: 2px;
          width: {{ cpu.usage }}%;
          transition: all 0.3s ease;
        }
        
        .cpu-bar.high-usage::after {
          background: var(--cpu-high-usage);
          animation: flash 0.5s infinite;
        }
        
        .cpu-text {
          opacity: 0;
          pointer-events: none;
          position: absolute;
          transform: translateY(-24px);
          transition: opacity 0.3s ease;
          left: 32px;
        }
        
        &:hover .cpu-bar {
          transform: translateY(24px);
          opacity: 0;
        }
        
        &:hover .cpu-text {
          opacity: 1;
          transform: translateY(0px);
        }
      template: |
        <i class="ti ti-cpu"></i>
        <div class="cpu-bar {{ cpu.usage > 85 ? 'high-usage' : '' }}"></div>
        <span class="cpu-text {{ cpu.usage > 85 ? 'high-usage' : '' }}">{{ Math.round(cpu.usage) }}%</span>

    template/battery:
      providers: [ "battery" ]
      styles: |
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
        
        .critical {
          color: var(--battery-low);
          animation: flash 1s infinite;
        }
        
        .low {
          color: var(--battery-low)
        }
        
        .mid {
          color: var(--battery-mid)
        }
        
        .good {
          color: var(--battery-good);
        }
        
        .battery-bar {
          width: 50px;
          height: 8px;
          background: color-mix(in srgb, currentColor 20%, transparent);
          border-radius: 2px;
          margin-left: 2px;
          margin-right: 6px;
          position: relative;
          transition: all 0.3s ease;
        }
        
        .battery-bar::after {
          content: '';
          position: absolute;
          left: 0;
          top: 0;
          height: 100%;
          background: currentColor;
          border-radius: 2px;
          width: {{ battery.chargePercent }}%;
          transition: all 0.3s ease;
        }
        
        .battery-text {
          opacity: 0;
          pointer-events: none;
          position: absolute;
          transform: translateY(-24px);
          transition: opacity 0.3s ease;
          left: 32px;
        }
        
        &:hover .battery-bar {
          transform: translateY(24px);
          opacity: 0;
        }
        
        &:hover .battery-text {
          opacity: 1;
          transform: translateY(0px);
        }
        
        overflow: hidden;
      template: |
        <div class="
            @switch (true) {
              @case (battery.chargePercent > 75) { good }
              @case (battery.chargePercent > 50) { mid }
              @case (battery.chargePercent > 25) { low }
              @default { critical }
            }
          ">
         @if (battery.isCharging) {<i class="ti ti-battery-charging"></i>}
            @else if (battery.chargePercent > 90) {<i class="ti ti-battery-4"></i>}
            @else if (battery.chargePercent > 70) {<i class="ti ti-battery-3"></i>}
            @else if (battery.chargePercent > 40) {<i class="ti ti-battery-2"></i>}
            @else if (battery.chargePercent > 20) {<i class="ti ti-battery-1"></i>}
            @else {<i class="ti ti-battery-exclamation"></i>}
            <div class="battery-bar"></div>
            <span class="battery-text">{{ Math.round(battery.chargePercent) }}%</span>
        </div>

  group/center:
    styles: |
      justify-self: center;

    template/glazewm:
      styles: |
        height: 40px;
        display: flex;
        gap: 4px;
        align-items: center;
        background: var(--bg);
        border: 1px solid var(--border);
        border-radius: 9999px;
        font-weight: 1000;
        padding: 2px;

        .workspace {
          border: none;
          border-radius: 9999px;
          display: flex;
          align-items: center;
          justify-content: center;
          padding: 6px;
        }
        
        .workspace button  {
          display: flex;
          align-items: center;
          justify-content: center;
          padding: 2px;
          width: 22px;
          height: 22px;
          border-radius: 50%;
          border: 3px solid;
          font-weight: 1000;
        }
        
        .workspace.notInFocus button {
          background: transparent;
        }
        
        .workspace.focused button {
          color: var(--rp-base);
        }
        
        .workspace-1, .workspace-7 {
          background: color-mix(in srgb, var(--rp-love) 10%, transparent);
          button {
            color: var(--ws-1);
            border-color: var(--rp-love);
            background: var(--rp-love);
          }
        }

        .workspace-2, .workspace-8 { 
          background: color-mix(in srgb, var(--rp-gold) 10%, transparent);
          button {
            color: var(--ws-2);
            border-color: var(--rp-gold);
            background: var(--rp-gold);
          }
        }

        .workspace-3, .workspace-9 {
          background: color-mix(in srgb, var(--rp-rose) 10%, transparent);
          button {
            color: var(--ws-3);
            border-color: var(--rp-rose);
            background: var(--rp-rose);
          }
        }

        .workspace-4 {
          background: color-mix(in srgb, var(--rp-pine) 10%, transparent);
          button {
            color: var(--ws-4);
            border-color: var(--rp-pine);
            background: var(--rp-pine);
          }
        }

        .workspace-5 {
          background: color-mix(in srgb, var(--rp-foam) 10%, transparent);
          button {
            color: var(--ws-5);
            border-color: var(--rp-foam);
            background: var(--rp-foam);
          }
        }

        .workspace-6 {
          background: color-mix(in srgb, var(--rp-iris) 10%, transparent);
          button {
            color: var(--ws-6);
            border-color: var(--rp-iris);
            background: var(--rp-iris);
          }
        }

      providers: [ "glazewm" ]
      events:
        - type: "click"
          fn_path: "script.js#focusWorkspace"
          selector: ".workspace, .workspace span"
      template: |
        @for (workspace of glazewm.currentWorkspaces) {
          <button class="workspace {{ workspace.hasFocus ? 'focused' : 'notInFocus' }} workspace-{{ workspace.name }}" id="{{ workspace.name }}">
            <button id="{{ workspace.name }}">{{ workspace.displayName ?? workspace.name }}</button>
          </button>
        }

  group/right:
    styles: |
      justify-self: end;
      height: 40px;
      display: flex;
      align-items: center;
      background: var(--bg);
      border: 1px solid var(--border);
      border-radius: 9999px;

      .template {
        margin: 4px;
        display: flex;
        align-items: center;
      }

      #network {
        background: color-mix(in srgb, currentColor 10%, transparent);
        border-radius: 9999px;
        padding: 6px;
        i.wifi, .ssid {
          margin-right: 6px;
        }
      }

    template/network:
      providers: [ "network", "util" ]
      styles: |
        margin: 10px;
        i {
          font-size: 20px;
        }
        color: var(--weather);
        .wifi-dots {
          display: flex;
          align-items: flex-end;
          height: 20px;
          gap: 2px;
        }
        
        .dot {
          background-color: currentColor;
          border-radius: 50%;
          transition: opacity 0.2s ease-in-out;
        }
        
        .dot:nth-child(1) {
          width: 4px;
          height: 4px;
        }
        
        .dot:nth-child(2) {
          width: 6px;
          height: 6px;
        }
        
        .dot:nth-child(3) {
          width: 8px;
          height: 8px;
        }
        
        .dot:nth-child(4) {
          width: 10px;
          height: 10px;
        }
        
        .dot.active {
          opacity: 1;
        }
        
        .dot.inactive {
          opacity: 0.5;
        }
      template: |
        @if (network.defaultInterface?.type === 'ethernet' || network.interfaces.length !== 0 && network.interfaces[0].type == 'ethernet' && network.defaultInterface?.type !== 'wifi') {
              <i class="ti ti-plug"></i>
            } @else if (network.defaultInterface?.type === 'wifi' || network.interfaces.length !== 0 && network.interfaces[0].type == 'wifi') {
              <div class="wifi-dots">
                <span class="dot
                  @if (network.defaultGateway?.signalStrength >= 25) { active }
                  @else { inactive }
                "></span>
                <span class="dot
                  @if (network.defaultGateway?.signalStrength >= 40) { active }
                  @else { inactive }
                "></span>
                <span class="dot
                  @if (network.defaultGateway?.signalStrength >= 65) { active }
                  @else { inactive }
                "></span>
                <span class="dot
                  @if (network.defaultGateway?.signalStrength >= 80) { active }
                  @else { inactive }
                "></span>
              </div>
              <span class="ssid">
              {{ network.defaultGateway?.ssid }}
              </span>
            } @else {
              <i class="ti ti-world-off"></i>
            }

    template/separator:
      styles: |
      template: |
        <i class="nf nf-oct-dot_fill"></>

    template/clock:
      providers: [ "date" ]
      styles: |
        padding-right: 6px;
      template: |
        {{ date.toFormat(date.now, 'EEE, d. MMM yyyy, t:ss') }}

